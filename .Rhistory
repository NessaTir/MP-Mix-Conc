library(rstatix)
# test for linear correlation
library(ggpubr)
# for GAM
library(mgcv)
# ----- 3. Read in needed data files -------------------------------------------
## ---- 3.01. Surface ----------------------------------------------------------
surface <- read.csv2("processed/surface_all.csv")
## ---- 3.02. Volume -----------------------------------------------------------
volume <- read.csv2("processed/volume_all.csv")
## ---- 3.03. Calcification ----------------------------------------------------
calcification <- read.csv2("processed/calcification_all.csv")
## ---- 3.04. Necrosis ---------------------------------------------------------
necrosis <- read.csv2("processed/necrosis_all.csv")
## ---- 3.05. Polypactivity ----------------------------------------------------
polypactivity <- read.csv2("processed/polypactivity_all.csv")
## ---- 3.06. YII --------------------------------------------------------------
YII <- read.csv2("processed/YII_all.csv")
## ---- 3.07. FvFm -------------------------------------------------------------
FvFm <- read.csv2("processed/FvFm_all.csv")
## ---- 3.08. rETRmax ----------------------------------------------------------
rETR <- read.csv2("processed/rETR_all.csv")
## ---- 3.09. Ek ---------------------------------------------------------------
Ek <- read.csv2("processed/Ek_all.csv")
## ---- 3.10. Alpha ------------------------------------------------------------
alpha <- read.csv2("processed/alpha_all.csv")
# ----- 4. Linear Relationship -------------------------------------------------
# Surface Pve
surface_Pve <- subset(surface_all, spec == "Pve") %>%
mutate(value_log = log(value))
cor.test(surface_Pve$value_log, surface_Pve$conc, conf.level = 0.95, method = "pearson")
# ----- 4. Linear Relationship -------------------------------------------------
# Surface Pve
surface_Pve <- subset(surface_all, spec == "Pve") %>%
mutate(value_log = log(value))
cor.test(surface_Pve$value_log, surface_Pve$conc, conf.level = 0.95, method = "pearson")
# ----- 3. Read in needed data files -------------------------------------------
## ---- 3.01. Surface ----------------------------------------------------------
surface <- read.csv2("processed/surface_all.csv")
## ---- 3.02. Volume -----------------------------------------------------------
volume <- read.csv2("processed/volume_all.csv")
## ---- 3.03. Calcification ----------------------------------------------------
calcification <- read.csv2("processed/calcification_all.csv")
## ---- 3.04. Necrosis ---------------------------------------------------------
necrosis <- read.csv2("processed/necrosis_all.csv")
## ---- 3.05. Polypactivity ----------------------------------------------------
polypactivity <- read.csv2("processed/polypactivity_all.csv")
## ---- 3.06. YII --------------------------------------------------------------
YII <- read.csv2("processed/YII_all.csv")
## ---- 3.07. FvFm -------------------------------------------------------------
FvFm <- read.csv2("processed/FvFm_all.csv")
## ---- 3.08. rETRmax ----------------------------------------------------------
rETR <- read.csv2("processed/rETR_all.csv")
## ---- 3.09. Ek ---------------------------------------------------------------
Ek <- read.csv2("processed/Ek_all.csv")
## ---- 3.10. Alpha ------------------------------------------------------------
alpha <- read.csv2("processed/alpha_all.csv")
# ----- 4. Linear Relationship -------------------------------------------------
# Surface Pve
surface_Pve <- subset(surface_all, spec == "Pve") %>%
mutate(value_log = log(value))
cor.test(surface_Pve$value_log, surface_Pve$conc, conf.level = 0.95, method = "pearson")
# ----- 4. Linear Relationship -------------------------------------------------
# Surface Pve
surface_Pve <- subset(surface, spec == "Pve") %>%
mutate(value_log = log(value))
cor.test(surface_Pve$value_log, surface_Pve$conc, conf.level = 0.95, method = "pearson")
View(surface_Pve)
# ----- 5. Other Relationships -------------------------------------------------
# Surface Pve
surface_Pve <- subset(surface, spec == "Pve")
# GAM
gam(value ~ treat, data = surface_Pve)
# GAM
gam(value ~ conc, data = surface_Pve)
summary(glht(GAM, linfct = mcp(treat = "Tukey")),
test = adjusted("holm"))
# ----- 2. Load in needed packages ---------------------------------------------
# to easily clean data, to read in .rds files
library(tidyverse)
# for statistical analyses using LMER and GLMER
library(lme4)
# for statistical testing
library(multcomp)
# check model fits statistically
library(performance)
library(rstatix)
# check model fits visually using qqplot, use glht for lmer testing
library(car)
# GAM
GAM <- gam(value ~ conc, data = surface_Pve)
summary(glht(GAM, linfct = mcp(treat = "Tukey")),
test = adjusted("holm"))
plot(GAM)
vis.gam(GAM)
# GAM
GAM <- gam(value ~ s(conc), data = surface_Pve)
plot(GAM)
plot(GAM, residuals = TRUE, pch = 1)
View(surface_Pve)
# GAM
lm_mod <- lm(value ~ conc, data = mcycle)
# GAM
lm_mod <- lm(value ~ conc, data = surface_Pve)
# Visualize the model
termplot(lm_mod, partial.resid = TRUE, se = TRUE)
# ----- 2. Load in needed packages ---------------------------------------------
library(tidyverse)
# read in the data files
library(readxl)
# create graphs
library(ggplot2)
library(ggpmisc)
# work with summarized data, e.g., means
library(rstatix)
# bring different plots together
library("patchwork")
# for annotations in heatmap
library("ggtext")
# ----- 3. Read in needed data files -------------------------------------------
## ---- 3.2. Coral Information -------------------------------------------------
corals <- read.csv2("in/coral_treatments.csv", sep=",") %>%
# modify character of some columns, where necessary
mutate(treat = as.factor(treat), # column for categorical model
conc = as.numeric(conc)) %>% # column for continuous model
dplyr::select(ID, treat, conc)
## ---- 3.3. Processed growth tables -------------------------------------------
# Surface
surface <- read_rds("processed/surface_growth.rds")
# Volume
volume <- read_rds("processed/volume_growth.rds")
# Calcification
calcification <- read_rds("processed/weight_growth.rds")
# Necrosis
# summary
necrosis <- read_csv2("out/Summary_necrosis.csv") %>%
dplyr::select(-c(1))
# percent
necrosis_per <- read_csv2("out/necrosis_percent.csv") %>%
dplyr::select(-c(1))
## ---- 3.4. Photosynthetic efficiency -----------------------------------------
# effective quantum yield
YII <- read_rds("processed/light_all.rds")
# relative YII to t0
YII_relative <- read_rds("processed/light_relative.rds")
# maximum quantum yield
FvFm <- read_rds("processed/dark_all.rds")
# relative YII to t0
FvFm_relative <- read_rds("processed/dark_relative.rds")
# relative electron transport rate
rETR <- read_rds("processed/rETR_parameter.rds") %>%
# clean column names for better merge with other timepoints
separate(ID_time, c('spec', 'col', 'tank', 'tp')) %>%
unite(ID, c(spec, col, tank), sep="_", remove=FALSE)%>%
# reaname timepoints for clean statistical analyses
mutate(tp = case_when(tp == "t0"~ "0",
tp == "t1"~ "1",
tp == "t2"~ "2",
tp == "t3"~ "3"),
tp = as.numeric(tp))
# merge rETR Table with coral infos
rETR_i <-  merge(corals, rETR, by = 'ID', all.x = TRUE)
## ---- 3.5. Polyp activity ----------------------------------------------------
Polyps <- read_rds("processed/polyp_activity.rds")
## ---- 3.6. Supplements -------------------------------------------------------
# MP Concentration measurements
Concentrations <- read_csv2("in/Concentration_newformat.csv") %>%
mutate(per_L = ((count/volume)*1000),
tank = as.character(tank),
conc = as.numeric(conc))
# ----- 4. Create Graphs -------------------------------------------------------
## ---- 4.1. Build up theme ----------------------------------------------------
# Create labels for species
spec_labs <- c("P. verrucosa", "S. pistillata")
names(spec_labs) <- c("Pve", "Spi")
treat_labs <-  c("0", "0.1", "1", "10", "100")
names(treat_labs) <- c("control", "0.1", "1", "10", "100")
# Create a color scheme
color_scheme <- c("#4A8696", "#FFED85", "#E09F3E", "#9E2A2B", "#540B0E")
alphavalues <- c(0.005, 0.3, 0.6, 1)
## ---- 4.2. Growth parameters -------------------------------------------------
### --- 4.2.1. Surface ---------------------------------------------------------
surface_plot <- surface %>%
# separate by species, concentration and timepoint
group_by(spec, conc, time) %>%
# ignore NAs
na.omit() %>%
# use mean
summarise(mean = mean(surface_growth),
# include sd
sd = sd(surface_growth)) %>%
# use cumulative sum of growth parameter
mutate(mean = cumsum(mean)) %>%
ggplot() +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_line(aes(x = time, y = mean, group = conc, color = conc),
size = 0.8, alpha = 0.8, linetype = 'longdash', position=position_dodge(width=0.2)) +
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme) +
geom_errorbar(aes(x = time, ymin = mean-sd, ymax = mean+sd,
color = conc, linetype = NULL, width = 0.2), size = 1, alpha = 0.95,
position = position_dodge(width = 0.2)) +
geom_point(aes(x = time, y = mean, color = conc),
position = position_dodge(width=0.2), size = 1.5) +
labs(color = expression(paste("Treatment ", mg, "Â·", L^-1)), fill = "Treatment (mg/l)") +
ylab(expression(atop(Cumulative~tissue, growth~("%")))) +
theme_classic() +
# design theme
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
# strip.text.y = element_text(size = 10),
axis.text.x = element_blank(),
#axis.title.x = element_text(size = 12),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 12),
legend.position = "top")
# show plot
surface_plot
### --- 4.2.2. Volume ----------------------------------------------------------
volume_plot <- volume %>%
# separate by species, concentration and timepoint
group_by(spec, conc, time) %>%
# ignore NAs
na.omit() %>%
# use mean
summarise(mean = mean(volume_growth),
# include sd
sd = sd(volume_growth)) %>%
# use cumulative sum of growth parameter
mutate(mean = cumsum(mean)) %>%
ggplot() +
facet_grid( ~ spec) +
geom_line(aes(x = time, y = mean, group = conc, color = conc),
size = 0.8, alpha = 0.8, linetype = 'longdash', position=position_dodge(width=0.2)) +
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme) +
geom_errorbar(aes(x = time, ymin = mean-sd, ymax = mean+sd,
color = conc, linetype = NULL, width = 0.2), size = 1, alpha = 0.95,
position = position_dodge(width = 0.2)) +
geom_point(aes(x =time, y = mean, color = conc),
position = position_dodge(width=0.2), size = 1.5) +
labs(color = "Treatment [mg/l]", fill = "Treatment [mg/l]") +
ylab(expression(atop(Cumulative~volume, growth~(cm^3~cm^-2)))) +
# design theme
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_blank(), # remove species labels
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.position = "none")
# show plot
volume_plot
### --- 4.2.3. Calcification ---------------------------------------------------
weight_plot <- calcification %>%
# separate by species, concentration and timepoint
group_by(spec, conc, time) %>%
# ignore NAs
na.omit() %>%
# use mean
summarise(mean = mean(weight_growth),
# include sd
sd = sd(weight_growth)) %>%
# use cumulative sum of growth parameter
mutate(mean = cumsum(mean)) %>%
ggplot() +
facet_grid( ~ spec) +
geom_line(aes(x = time, y = mean, group = conc, color = conc),
size = 0.8, alpha = 0.8, linetype = 'longdash', position=position_dodge(width=0.2)) +
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme) +
geom_errorbar(aes(x = time, ymin = mean-sd, ymax = mean+sd,
color = conc, linetype = NULL, width = 0.2), size = 1, alpha = 0.95,
position = position_dodge(width = 0.2)) +
geom_point(aes(x =time, y = mean, color = conc),
position = position_dodge(width=0.2), size = 1.5) +
labs(color = "Treatment [mg/l]", fill = "Treatment [mg/l]") +
ylab(expression(atop(Cumulative~calcification, rate~(mg~cm^-2)))) +
#ylab("Cumulative calcification [mg/cmÂ²]") +
xlab("Weeks") +
# design theme
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_blank(), # remove species labels
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.position = "none") # remove legend
# show plot
weight_plot
### --- 4.2.4. Necrosis --------------------------------------------------------
# level treatment, important for visualisation
necrosis$treat <- factor(necrosis$treat,
levels = c("control", "0.1", "1", "10", "100"))
necrosis$cat <- factor(necrosis$cat,
levels = c("none", "low", "moderate", "high"))
# create legend names for category names
cat_labs <-  c("", "low", "moderate", "high")
names(cat_labs) <- c("none", "low", "moderate", "high")
# Create a color scheme with switched order, so it's correct in the graph
color_scheme_2 <- c("#540B0E", "#9E2A2B", "#E09F3E", "#FFED85", "#4A8696")
necro_plot <- necrosis %>%
filter(tp =="3") %>%
ggplot(aes(x=treat, y=prop, fill= fct_rev(treat)))+
geom_bar(stat = "identity", aes(alpha=cat)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
scale_alpha_manual("cat", values=alphavalues,
labels = cat_labs) +
scale_fill_manual(guide = 'none', values = color_scheme_2)+
scale_x_discrete(labels = treat_labs) +
labs(x = expression(paste("Treatment ", mg, "Â·", L^-1)),
y = "Necrosis (%)",
title = "") +
# design theme
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_blank(),
legend.position = "top")
# show plot
necro_plot
# bring all growth plots together
growth_plot <- surface_plot / volume_plot / weight_plot / necro_plot
# safe all growth plots as one
ggsave("out/growth.png", plot = growth_plot,
scale = 1, width = 18, height = 26, units = c("cm"),
dpi = 600, limitsize = TRUE)
## ---- 4.3. Polyp activity ----------------------------------------------------
polyps <- ggplot(Polyps, aes(x = tp, y = ranks)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = ranks, group = treat, color = treat, fill = treat)) +
scale_x_continuous(labels= c("0", "4", "8", "12")) +
scale_color_manual(values = color_scheme,
labels = treat_labs) +
scale_fill_manual(values = color_scheme,
labels = treat_labs) +
ylab("Mean polyp activity") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# design theme
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.y = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
polyps
## ---- 4.3. Polyp activity ----------------------------------------------------
polyps <- ggplot(Polyps, aes(x = tp, y = ranks)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = ranks, group = treat, color = treat, fill = treat)) +
scale_x_continuous(labels= c("0", "4", "8", "12")) +
scale_color_manual(values = color_scheme,
labels = treat_labs) +
scale_fill_manual(values = color_scheme,
labels = treat_labs) +
ylab("Mean polyp activity") +
xlab("Weeks of exposure") +
labs(x = expression(paste("Treatment ", mg, "Â·", L^-1)),
y = "Mean polyp activity",
title = "") +
# design theme
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.y = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
polyps
fill = expression(paste("Treatment ", mg, "Â·", L^-1)) +
## ---- 4.3. Polyp activity ----------------------------------------------------
polyps <- ggplot(Polyps, aes(x = tp, y = ranks)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = ranks, group = treat, color = treat, fill = treat)) +
scale_x_continuous(labels= c("0", "4", "8", "12")) +
scale_color_manual(values = color_scheme,
labels = treat_labs) +
scale_fill_manual(values = color_scheme,
labels = treat_labs) +
ylab("Mean polyp activity") +
xlab("Weeks of exposure") +
# labs(x = expression(paste("Treatment ", mg, "Â·", L^-1)),
#     y = "Necrosis (%)",
#    title = "")
labs(color = expression(paste("Treatment ", mg, "Â·", L^-1)),
fill = expression(paste("Treatment ", mg, "Â·", L^-1))) +
# design theme
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.y = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
polyps
## ---- 4.3. Polyp activity ----------------------------------------------------
polyps <- ggplot(Polyps, aes(x = tp, y = ranks)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = ranks, group = treat, color = treat, fill = treat)) +
scale_x_continuous(labels= c("0", "4", "8", "12")) +
scale_color_manual(values = color_scheme,
labels = treat_labs) +
scale_fill_manual(values = color_scheme,
labels = treat_labs) +
ylab("Mean polyp activity") +
xlab("Weeks of exposure") +
labs(color = expression(paste("Treatment ", mg, "Â·", L^-1)), fill = "Treatment (mg/l)") +
# design theme
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.y = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
polyps
fill = expression(paste("Treatment ", mg, "Â·", L^-1)) +
## ---- 4.3. Polyp activity ----------------------------------------------------
polyps <- ggplot(Polyps, aes(x = tp, y = ranks)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = ranks, group = treat, color = treat, fill = treat)) +
scale_x_continuous(labels= c("0", "4", "8", "12")) +
scale_color_manual(values = color_scheme,
labels = treat_labs) +
scale_fill_manual(values = color_scheme,
labels = treat_labs) +
ylab("Mean polyp activity") +
xlab("Weeks of exposure") +
labs(color = expression(paste("Treatment ", mg, "Â·", L^-1)),
fill = expression(paste("Treatment ", mg, "Â·", L^-1))) +
# design theme
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.y = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
polyps
## ---- 4.3. Polyp activity ----------------------------------------------------
polyps <- ggplot(Polyps, aes(x = tp, y = ranks)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = ranks, group = treat, color = treat, fill = treat)) +
scale_x_continuous(labels= c("0", "4", "8", "12")) +
scale_color_manual(values = color_scheme,
labels = treat_labs) +
scale_fill_manual(values = color_scheme,
labels = treat_labs) +
ylab("Mean polyp activity") +
xlab("Weeks of exposure") +
labs(color = expression(paste("Treatment ", mg, "Â·", L^-1)),
fill = expression(paste("Treatment ", mg, "Â·", L^-1))) +
# design theme
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.y = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
polyps
# save plot
ggsave("out/polyps.png", plot = polyps,
scale = 1, width = 12, height = 20, units = c("cm"),
dpi = 600, limitsize = TRUE)
