# use mean
summarise(value = sum(weight_growth))%>%
mutate(parameter = "calcification",
conc = as.numeric(conc))
# create summary table with relative necrosis after 12 weeks
necrosis_all <-  necrosis_per %>%
# select only the last timepoint
filter(tp=="3") %>%
# ignore NAs
na.omit() %>%
#rename column enrty
rename(value = necro_per) %>%
mutate(parameter = "necrosis",
conc = as.numeric(conc))
necrosis_all <- necrosis_all %>%
# remove unnecessary colums
dplyr::select(-necro_occured, -treatment, -col, -tank, -tp, -treat)
# create summary table with relative YII after 12 weeks
YII_all <-  YII_relative %>%
# select only the last timepoint
filter(tp=="3") %>%
# ignore NAs
na.omit() %>%
#rename column enrty
rename(value = relativeYII) %>%
# use mean
mutate(parameter = "YII")   %>%
#keep only relevant columns
dplyr::select(ID, spec, conc, value, parameter)
# create summary table with relative FvFm after 12 weeks
FvFm_all <-  FvFm_relative %>%
# select only the last timepoint
filter(tp=="3") %>%
# ignore NAs
na.omit() %>%
#rename column enrty
rename(value = relativeFv_Fm) %>%
# use mean
mutate(parameter = "FvFm")   %>%
#keep only relevant columns
dplyr::select(ID, spec, conc, value, parameter)
# create summary table with rETR after 12 weeks
rETR_all <-  rETR_i %>%
# select only the last timepoint
filter(tp=="3") %>%
# ignore NAs
na.omit() %>%
#rename column enrty
rename(value = rETRmax) %>%
# use mean
mutate(parameter = "rETRmax")   %>%
#keep only relevant columns
dplyr::select(ID, spec, conc, value, parameter)
# create summary table with alpha after 12 weeks
alpha_all <-  rETR_i %>%
# select only the last timepoint
filter(tp=="3") %>%
# ignore NAs
na.omit() %>%
#rename column enrty
rename(value = alpha) %>%
# use mean
mutate(parameter = "alpha")   %>%
#keep only relevant columns
dplyr::select(ID, spec, conc, value, parameter)
# create summary table with Ek after 12 weeks
Ek_all <-  rETR_i %>%
# select only the last timepoint
filter(tp=="3") %>%
# ignore NAs
na.omit() %>%
#rename column enrty
rename(value = Ek) %>%
# use mean
mutate(parameter = "Ek")   %>%
#keep only relevant columns
dplyr::select(ID, spec, conc, value, parameter)
# create summary table with mean polyp acrtivity over time of exposure
polypactivity_all <-  Polyps %>%
# select only the last timepoint
filter(tp!="0") %>%
# separate by species and concentration
group_by(ID, spec, conc) %>%
# ignore NAs
na.omit() %>%
# use mean
summarise(value = mean(ranks))%>%
mutate(parameter = "polypactivity",
conc = as.numeric(conc))
# bring all tables together
all_data <- rbind(surface_all, volume_all, calcification_all, necrosis_all,
polypactivity_all,
YII_all, FvFm_all,
rETR_all, alpha_all, Ek_all)
all_data$parameter <- factor(all_data$parameter,
levels = c("surface", "volume", "calcification", "necrosis", "polypactivity",
"YII", "FvFm", "rETRmax", "Ek", "alpha"))
ggplot(all_data, aes(conc, value)) +
facet_grid(parameter~spec, scales="free",
labeller = labeller(spec = spec_labs)) +
geom_point() +
stat_poly_line(color = "black") +
scale_x_continuous(trans='log', labels= c("0", "0.1", "1", "10", "100"), breaks = c(0, 0.1, 1, 10, 100)) +
scale_y_continuous(trans='log10')+
stat_correlation(p.digits = 4,
aes(label = paste(after_stat(r.label),
after_stat(p.value.label),
sep = "*\"; \"*")),
method = "pearson", conf.level = 0.95) +
xlab("Treatment (mg/l)") +
ylab("Value") +
# stat_correlation(use_label(c("R", "P")))+
theme_bw()+
theme(#legend.position= "none", #c(0.1, 0.9),
#legend.direction = "horizontal",
# legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
ggplot(all_data, aes(conc, value)) +
facet_grid(parameter~spec, scales="free",
labeller = labeller(spec = spec_labs)) +
geom_point() +
stat_poly_line(color = "black") +
scale_x_continuous(trans='log', labels= c("0", "0.1", "1", "10", "100"), breaks = c(0, 0.1, 1, 10, 100)) +
scale_y_continuous(trans='log10')+
stat_correlation(p.digits = 4,
aes(label = paste(after_stat(r.label),
after_stat(p.value.label),
sep = "*\"; \"*")),
method = "pearson", conf.level = 0.95) +
labs(x = expression(paste("Treatment ", mg, "·", L^-1)), y="Value") +
#xlab("Treatment (mg/l)") +
#ylab("Value") +
# stat_correlation(use_label(c("R", "P")))+
theme_bw()+
theme(#legend.position= "none", #c(0.1, 0.9),
#legend.direction = "horizontal",
# legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
ggplot(all_data, aes(conc, value)) +
facet_grid(parameter~spec, scales="free",
labeller = labeller(spec = spec_labs)) +
geom_point() +
stat_poly_line(color = "black") +
scale_x_continuous(trans='log', labels= c("0", "0.1", "1", "10", "100"), breaks = c(0, 0.1, 1, 10, 100)) +
scale_y_continuous(trans='log10')+
scale_color_manual(values = color_scheme) +
stat_correlation(p.digits = 4,
aes(label = paste(after_stat(r.label),
after_stat(p.value.label),
sep = "*\"; \"*")),
method = "pearson", conf.level = 0.95) +
labs(x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "Value") +
# stat_correlation(use_label(c("R", "P")))+
theme_bw()+
theme(#legend.position= "none", #c(0.1, 0.9),
#legend.direction = "horizontal",
# legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
ggplot(all_data, aes(conc, value)) +
facet_grid(parameter~spec, scales="free",
labeller = labeller(spec = spec_labs)) +
geom_point() +
stat_poly_line(color = "black") +
scale_x_continuous(trans='log', labels= c("0", "0.1", "1", "10", "100"), breaks = c(0, 0.1, 1, 10, 100)) +
scale_y_continuous(trans='log10')+
stat_correlation(p.digits = 4,
aes(label = paste(after_stat(r.label),
after_stat(p.value.label),
sep = "*\"; \"*")),
method = "pearson", conf.level = 0.95) +
scale_color_manual(values = color_scheme) +
labs(x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "Value") +
# stat_correlation(use_label(c("R", "P")))+
theme_bw()+
theme(#legend.position= "none", #c(0.1, 0.9),
#legend.direction = "horizontal",
# legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
ggplot(all_data, aes(conc, value)) +
facet_grid(parameter~spec, scales="free",
labeller = labeller(spec = spec_labs)) +
geom_point() +
scale_color_manual(values = color_scheme) +
stat_poly_line(color = "black") +
scale_x_continuous(trans='log', labels= c("0", "0.1", "1", "10", "100"), breaks = c(0, 0.1, 1, 10, 100)) +
scale_y_continuous(trans='log10')+
stat_correlation(p.digits = 4,
aes(label = paste(after_stat(r.label),
after_stat(p.value.label),
sep = "*\"; \"*")),
method = "pearson", conf.level = 0.95) +
labs(x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "Value") +
# stat_correlation(use_label(c("R", "P")))+
theme_bw()+
theme(#legend.position= "none", #c(0.1, 0.9),
#legend.direction = "horizontal",
# legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
ggplot(all_data, aes(conc, value)) +
facet_grid(parameter~spec, scales="free",
labeller = labeller(spec = spec_labs)) +
geom_point() +
scale_color_manual(values = color_scheme) +
stat_poly_line(color = "black") +
scale_x_continuous(trans='log', labels= c("0", "0.1", "1", "10", "100"), breaks = c(0, 0.1, 1, 10, 100)) +
scale_y_continuous(trans='log10')+
stat_correlation(p.digits = 4,
aes(label = paste(after_stat(r.label),
after_stat(p.value.label),
sep = "*\"; \"*")),
method = "pearson", conf.level = 0.95) +
labs(x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "Value") +
# stat_correlation(use_label(c("R", "P")))+
#theme_bw()+
theme(#legend.position= "none", #c(0.1, 0.9),
#legend.direction = "horizontal",
# legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
ggplot(all_data, aes(conc, value)) +
facet_grid(parameter~spec, scales="free",
labeller = labeller(spec = spec_labs)) +
geom_point() +
stat_poly_line(color = "black") +
scale_color_continuous(values = color_scheme) +
scale_x_continuous(trans='log', labels= c("0", "0.1", "1", "10", "100"), breaks = c(0, 0.1, 1, 10, 100)) +
scale_y_continuous(trans='log10')+
stat_correlation(p.digits = 4,
aes(label = paste(after_stat(r.label),
after_stat(p.value.label),
sep = "*\"; \"*")),
method = "pearson", conf.level = 0.95) +
labs(x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "Value") +
# stat_correlation(use_label(c("R", "P")))+
theme_bw()+
theme(#legend.position= "none", #c(0.1, 0.9),
#legend.direction = "horizontal",
# legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
ggplot(all_data, aes(conc, value)) +
facet_grid(parameter~spec, scales="free",
labeller = labeller(spec = spec_labs)) +
geom_point() +
stat_poly_line(color = "black") +
scale_color_continuous(treat = color_scheme) +
scale_x_continuous(trans='log', labels= c("0", "0.1", "1", "10", "100"), breaks = c(0, 0.1, 1, 10, 100)) +
scale_y_continuous(trans='log10')+
stat_correlation(p.digits = 4,
aes(label = paste(after_stat(r.label),
after_stat(p.value.label),
sep = "*\"; \"*")),
method = "pearson", conf.level = 0.95) +
labs(x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "Value") +
# stat_correlation(use_label(c("R", "P")))+
theme_bw()+
theme(#legend.position= "none", #c(0.1, 0.9),
#legend.direction = "horizontal",
# legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
ggplot(all_data, aes(conc, value)) +
facet_grid(parameter~spec, scales="free",
labeller = labeller(spec = spec_labs)) +
geom_point() +
stat_poly_line(color = "black") +
#scale_color_continuous(treat = color_scheme) +
scale_x_continuous(trans='log', labels= c("0", "0.1", "1", "10", "100"), breaks = c(0, 0.1, 1, 10, 100)) +
scale_y_continuous(trans='log10')+
stat_correlation(p.digits = 4,
aes(label = paste(after_stat(r.label),
after_stat(p.value.label),
sep = "*\"; \"*")),
method = "pearson", conf.level = 0.95) +
labs(x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "Value") +
# stat_correlation(use_label(c("R", "P")))+
theme_bw()+
theme(#legend.position= "none", #c(0.1, 0.9),
#legend.direction = "horizontal",
# legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
View(volume_all)
# Calculate Pearson correlation coefficient
correlation_coefficient <- surface_all %>%
cor(value, conc, method = "pearson")
surface_all
# Calculate Pearson correlation coefficient
correlation_coefficient <- surface_all %>%
cor(conc, value, method = "pearson")
# Calculate Pearson correlation coefficient
correlation_coefficient <-
cor(surface_all$conc, surface_all$value, method = "pearson")
# Test the correlation
correlation_test <- cor.test(surface_all$conc, surface_all$value, method = "pearson")
# Print results
cat("Pearson Correlation Coefficient:", correlation_coefficient, "\n")
print(correlation_test)
?cor()
# Statistics for supplement table
#surface_all %>%
# select only Pve
#filter(spec == "Pve") %>%
# cor_test(surface_all, vars1 = "value",
#         vars2 = "conc", method = "pearson")
test <- surface_all %>%
filter(spec=="Pve")
# Calculate Pearson correlation coefficient
correlation_coefficient <-
cor(test$conc, test$value, method = "pearson")
# Test the correlation
correlation_test <- cor.test(test$conc, test$value, method = "pearson")
# Print results
cat("Pearson Correlation Coefficient:", correlation_coefficient, "\n")
print(correlation_test)
# Statistics for supplement table
surface_all %>%
# select only Pve
filter(spec == "Pve") %>%
cor_test(surface_all, vars1 = "value",
vars2 = "conc", method = "pearson")
# Statistics for supplement table
surface_all %>%
# select only Pve
filter(spec == "Pve") %>%
cor.test( vars1 = "value",
vars2 = "conc", method = "pearson")
cor.test(surface_all$conc, surface_all$value, subset = (surface_all$spec == "Pve"), method = "pearson", conf.level = 0.95)
test <- surface_all %>%
filter(spec=="Pve")
# Calculate Pearson correlation coefficient
correlation_coefficient <-
cor(test$conc, test$value, method = "pearson")
# Test the correlation
correlation_test <- cor.test(test$conc, test$value, method = "pearson")
# Print results
cat("Pearson Correlation Coefficient:", correlation_coefficient, "\n")
print(correlation_test)
# Extract R value
r_value <- correlation_test$estimate
# Print results
cat("Pearson Correlation Coefficient:", correlation_coefficient, "\n")
cat("R value:", r_value, "\n")
print(correlation_test)
cor.test()
# Test the correlation
correlation_test <- cor.test(test$conc, test$value, conf.level = 0.95, method = "pearson")
print(correlation_test)
coorplot<- ggplot(all_data, aes(conc, value)) +
facet_grid(parameter~spec, scales="free",
labeller = labeller(spec = spec_labs)) +
geom_point() +
stat_poly_line(color = "black") +
#scale_color_continuous(treat = color_scheme) +
scale_x_continuous(trans='log', labels= c("0", "0.1", "1", "10", "100"), breaks = c(0, 0.1, 1, 10, 100)) +
scale_y_continuous(trans='log10')+
stat_correlation(p.digits = 4,
aes(label = paste(after_stat(r.label),
after_stat(p.value.label),
sep = "*\"; \"*")),
method = "pearson", conf.level = 0.95) +
labs(x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "Value") +
# stat_correlation(use_label(c("R", "P")))+
theme_bw()+
theme(#legend.position= "none", #c(0.1, 0.9),
#legend.direction = "horizontal",
# legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
View(coorplot)
coorplot[["labels"]][["label"]]
View(coorplot[["data"]])
# Statistics for supplement table
surface_all %>%
# select only Pve
filter(spec == "Pve") %>%
cor.test( vars1 = "value",
vars2 = "conc", method = "pearson")
# Statistics for supplement table
surface_all %>%
# select only Pve
filter(spec == "Pve") %>%
cor.test(value, conc, method = c("pearson"), conf.level = 0.95)
surface_all %>%
# select only Pve
#filter(spec == "Pve") %>%
cor.test(value, conc, method = c("pearson"), conf.level = 0.95)
View(surface_all)
cor.test(test$conc, test$value, conf.level = 0.95, method = "pearson")
# Print results
cat("Pearson Correlation Coefficient:", correlation_coefficient, "\n")
print(correlation_test)
# Extract R value
r_value <- correlation_test$estimate
# Print results
cat("Pearson Correlation Coefficient:", correlation_coefficient, "\n")
cat("R value:", r_value, "\n")
print(correlation_test)
cor.test(surface_all$conc, surface_all$value, subset = (surface_all$spec == "Pve"), method = "pearson", conf.level = 0.95)
ggplot(all_data, aes(conc, value)) +
facet_grid(parameter~spec, scales="free",
labeller = labeller(spec = spec_labs)) +
geom_point() +
stat_poly_line(color = "black") +
#scale_color_continuous(treat = color_scheme) +
scale_x_continuous(trans='log', labels= c("0", "0.1", "1", "10", "100"), breaks = c(0, 0.1, 1, 10, 100)) +
scale_y_continuous(trans='log10')+
stat_correlation(p.digits = 4,
aes(label = paste(after_stat(r.label),
after_stat(p.value.label),
sep = "*\"; \"*")),
method = "pearson", conf.level = 0.95) +
labs(x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "Value") +
# stat_correlation(use_label(c("R", "P")))+
theme_bw()+
theme(#legend.position= "none", #c(0.1, 0.9),
#legend.direction = "horizontal",
# legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))
# Statistics for supplement table
# Surface Pve
surface_Pve <- subset(surface_all, spec == "Pve")
cor.test(value, conc,  conf.level = 0.95, method = "pearson")
# Statistics for supplement table
# Surface Pve
surface_Pve <- subset(surface_all, spec == "Pve")
surface_Pve %>% cor.test(value, conc,  conf.level = 0.95, method = "pearson")
cor.test(surface_Pve$value, surface_Pve$conc,  conf.level = 0.95, method = "pearson")
# Surface Spi
surface_Spi <- subset(surface_all, spec == "Spi")
cor.test(surface_Spi$value, surface_Spi$conc,  conf.level = 0.95, method = "pearson")
