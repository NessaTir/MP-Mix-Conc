scale_y_continuous(expand = expansion(mult = c(0.05, 0.35)))+
scale_linetype_manual(values = c(1,2))+
labs(x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "Tissue growth") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_text(face = "italic", size = 12),
strip.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 10),
axis.text.x = element_blank(),
legend.position = "none")
surf_smooth
# ----- 2. Load in needed packages ---------------------------------------------
library(tidyverse)
# read in the data files
library(readxl)
# work with summarized data, e.g., means
library(rstatix)
# test for linear correlation
library(ggpubr)
# using AIC to find the best fitted test
library(AICcmodavg)
# GAM
library(mgcv)
# ----- 3. Read in needed data files -------------------------------------------
## ---- 3.01. Surface ----------------------------------------------------------
surface <- read.csv2("processed/surface_all.csv") %>%
mutate(conc = as.numeric(conc),
x_axis = case_when(conc == "0" ~ "1",
conc == "0.1" ~ "2",
conc == "1" ~ "3",
conc == "10" ~ "4",
conc == "100" ~ "5"),
x_axis = as.numeric(x_axis),
Color = case_when(conc == "0" ~  "#4A8696",
conc == "0.1" ~ "#FFED85",
conc == "1" ~ "#E09F3E",
conc == "10" ~ "#9E2A2B",
conc == "100" ~ "#540B0E"))
## ---- 3.02. Volume -----------------------------------------------------------
volume <- read.csv2("processed/volume_all.csv") %>%
mutate(conc = as.numeric(conc),
,
x_axis = case_when(conc == "0" ~ "1",
conc == "0.1" ~ "2",
conc == "1" ~ "3",
conc == "10" ~ "4",
conc == "100" ~ "5"),
x_axis = as.numeric(x_axis),
Color = case_when(conc == "0" ~  "#4A8696",
conc == "0.1" ~ "#FFED85",
conc == "1" ~ "#E09F3E",
conc == "10" ~ "#9E2A2B",
conc == "100" ~ "#540B0E"))
## ---- 3.03. Calcification ----------------------------------------------------
calcification <- read.csv2("processed/calcification_all.csv") %>%
mutate(conc = as.numeric(conc),
x_axis = case_when(conc == "0" ~ "1",
conc == "0.1" ~ "2",
conc == "1" ~ "3",
conc == "10" ~ "4",
conc == "100" ~ "5"),
x_axis = as.numeric(x_axis),
Color = case_when(conc == "0" ~  "#4A8696",
conc == "0.1" ~ "#FFED85",
conc == "1" ~ "#E09F3E",
conc == "10" ~ "#9E2A2B",
conc == "100" ~ "#540B0E"))
## ---- 3.04. Necrosis ---------------------------------------------------------
necrosis <- read.csv2("processed/necrosis_all.csv") %>%
mutate(conc = as.numeric(conc),
x_axis = case_when(conc == "0" ~ "1",
conc == "0.1" ~ "2",
conc == "1" ~ "3",
conc == "10" ~ "4",
conc == "100" ~ "5"),
x_axis = as.numeric(x_axis),
Color = case_when(conc == "0" ~  "#4A8696",
conc == "0.1" ~ "#FFED85",
conc == "1" ~ "#E09F3E",
conc == "10" ~ "#9E2A2B",
conc == "100" ~ "#540B0E"))
## ---- 3.05. Polypactivity ----------------------------------------------------
polypactivity <- read.csv2("processed/polypactivity_all.csv") %>%
mutate(conc = as.numeric(conc),
x_axis = case_when(conc == "0" ~ "1",
conc == "0.1" ~ "2",
conc == "1" ~ "3",
conc == "10" ~ "4",
conc == "100" ~ "5"),
x_axis = as.numeric(x_axis),
Color = case_when(conc == "0" ~  "#4A8696",
conc == "0.1" ~ "#FFED85",
conc == "1" ~ "#E09F3E",
conc == "10" ~ "#9E2A2B",
conc == "100" ~ "#540B0E"))
## ---- 3.06. YII --------------------------------------------------------------
YII <- read.csv2("processed/YII_all.csv") %>%
mutate(conc = as.numeric(conc),
x_axis = case_when(conc == "0" ~ "1",
conc == "0.1" ~ "2",
conc == "1" ~ "3",
conc == "10" ~ "4",
conc == "100" ~ "5"),
x_axis = as.numeric(x_axis),
Color = case_when(conc == "0" ~  "#4A8696",
conc == "0.1" ~ "#FFED85",
conc == "1" ~ "#E09F3E",
conc == "10" ~ "#9E2A2B",
conc == "100" ~ "#540B0E"))
## ---- 3.07. FvFm -------------------------------------------------------------
FvFm <- read.csv2("processed/FvFm_all.csv") %>%
mutate(conc = as.numeric(conc),
x_axis = case_when(conc == "0" ~ "1",
conc == "0.1" ~ "2",
conc == "1" ~ "3",
conc == "10" ~ "4",
conc == "100" ~ "5"),
x_axis = as.numeric(x_axis),
Color = case_when(conc == "0" ~  "#4A8696",
conc == "0.1" ~ "#FFED85",
conc == "1" ~ "#E09F3E",
conc == "10" ~ "#9E2A2B",
conc == "100" ~ "#540B0E"))
## ---- 3.08. rETRmax ----------------------------------------------------------
rETR <- read.csv2("processed/rETR_all.csv") %>%
mutate(conc = as.numeric(conc),
x_axis = case_when(conc == "0" ~ "1",
conc == "0.1" ~ "2",
conc == "1" ~ "3",
conc == "10" ~ "4",
conc == "100" ~ "5"),
x_axis = as.numeric(x_axis),
Color = case_when(conc == "0" ~  "#4A8696",
conc == "0.1" ~ "#FFED85",
conc == "1" ~ "#E09F3E",
conc == "10" ~ "#9E2A2B",
conc == "100" ~ "#540B0E"))
## ---- 3.09. Ek ---------------------------------------------------------------
Ek <- read.csv2("processed/Ek_all.csv") %>%
mutate(conc = as.numeric(conc),
x_axis = case_when(conc == "0" ~ "1",
conc == "0.1" ~ "2",
conc == "1" ~ "3",
conc == "10" ~ "4",
conc == "100" ~ "5"),
x_axis = as.numeric(x_axis),
Color = case_when(conc == "0" ~  "#4A8696",
conc == "0.1" ~ "#FFED85",
conc == "1" ~ "#E09F3E",
conc == "10" ~ "#9E2A2B",
conc == "100" ~ "#540B0E"))
## ---- 3.10. Alpha ------------------------------------------------------------
alpha <- read.csv2("processed/alpha_all.csv") %>%
mutate(conc = as.numeric(conc),
x_axis = case_when(conc == "0" ~ "1",
conc == "0.1" ~ "2",
conc == "1" ~ "3",
conc == "10" ~ "4",
conc == "100" ~ "5"),
x_axis = as.numeric(x_axis),
Color = case_when(conc == "0" ~  "#4A8696",
conc == "0.1" ~ "#FFED85",
conc == "1" ~ "#E09F3E",
conc == "10" ~ "#9E2A2B",
conc == "100" ~ "#540B0E"))
# ----- 4. GAM: Relationships -------------------------------------------
## ---- 4.01. Surface ----------------------------------------------------------
### --- 4.01.1. Pve ------------------------------------------------------------
# Surface Pve
surface_Pve <- subset(surface, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+100))
# fit GAM
# function s within the formula to denote the smooth terms
# bs = cr -> cubic regression splines
mod_gam1 = gam(value_log~ s(conc_log, bs = "cr", k=5), data = surface_Pve)
summary(mod_gam1)
plot(mod_gam1)
# create graph
plot_surf_Pve <- ggplot(surface_Pve, aes(x = x_axis, y = value_log,
color = Color)) +
scale_color_identity() +
geom_point() +
geom_smooth(aes(x = x_axis, y = value_log), method = "gam",
formula = y ~ s(x, bs = "cs", fx = TRUE, k = 5),
color = "black") +
scale_x_continuous(labels= c("control", "0.1", "1", "10", "100"),
breaks = c(1, 2, 3, 4, 5)) +
scale_y_continuous(breaks = c(3.5, 4, 4.5, 5, 5.5),
limits=c(3.25, 5.5)) +
labs(title = "P. verrucosa",
x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "log(tissue growth)") +
theme_bw() +
theme(plot.title = element_text(size=12, face="italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_blank(),
strip.text.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 10),
legend.position = "none")
# show plot
plot_surf_Pve
# add GAM statistics
plot_surf_Pve <- plot_surf_Pve + annotate("text", x = 4.25, y = 5.45,
label = "p = 0.0101, edf = 1.601", size = 3)
plot_surf_Pve
### --- 4.01.2. Spi ------------------------------------------------------------
# Surface Spi
surface_Spi <- subset(surface, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+100))
plot(mod_gam1)
# fit GAM
# function s within the formula to denote the smooth terms
# bs = cr -> cubic regression splines
mod_gam2 = gam(value_log ~ s(conc_log, bs = "cr", k=5), data = surface_Spi)
summary(mod_gam2)
plot(mod_gam2)
## ---- 4.02. Volume -----------------------------------------------------------
### --- 4.02.1. Pve ------------------------------------------------------------
volume_Pve <- subset(volume, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+1))
# fit GAM
#function s within the formula to denote the smooth terms
#bs = cr -> cubic regression splines
mod_gam3 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = volume_Pve)
summary(mod_gam3)
plot(mod_gam3)
# create graph
plot_vol_Pve <- ggplot(volume_Pve, aes(x = x_axis, y = value_log,
color = Color)) +
scale_color_identity() +
geom_point() +
geom_smooth(aes(x = x_axis, y = fitted(mod_gam3)), method = "gam",
formula = y ~ s(x, bs = "cs", fx = TRUE, k = 5),
color = "black") +
scale_x_continuous(labels= c("control", "0.1", "1", "10", "100"),
breaks = c(1, 2, 3, 4, 5)) +
scale_y_continuous(breaks = c(-0.05, 0, 0.05, 0.1, 0.15),
limits=c(-0.05, 0.15))+
labs(title = "P. verrucosa",
x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "log(volume growth)") +
theme_bw() +
theme(plot.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_blank(),
strip.text.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 10),
legend.position = "none")
plot_vol_Pve
# add GAM statistics
plot_vol_Pve <- plot_vol_Pve + annotate("text", x = 4.25, y = 0.15,
label = "p = 0.0034, edf = 1.903", size = 3)
plot_vol_Pve
### --- 4.02.2. Spi ------------------------------------------------------------
# volume Spi
volume_Spi <- subset(volume, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+1))
# fit GAM
#function s within the formula to denote the smooth terms
#bs = cr -> cubic regression splines
mod_gam4 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = volume_Spi)
summary(mod_gam4)
plot(mod_gam4)
# create graph
plot_vol_Spi <- ggplot(volume_Spi, aes(x = x_axis, y = value_log,
color = Color)) +
scale_color_identity() +
geom_point() +
geom_smooth(aes(x = x_axis, y = fitted(mod_gam4)), method = "gam",
formula = y ~ s(x, bs = "cs", fx = TRUE, k = 5),
color = "black") +
scale_x_continuous(labels= c("control", "0.1", "1", "10", "100"),
breaks = c(1, 2, 3, 4, 5)) +
scale_y_continuous(breaks = c(-0.05, 0, 0.05, 0.1, 0.15),
limits=c(-0.05, 0.15)) +
labs(title = "S. pistillata",
x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "log(volume growth)") +
theme_bw() +
theme(plot.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_blank(),
strip.text.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "none")
plot_vol_Spi
# add GAM statistics
plot_vol_Spi <- plot_vol_Spi + annotate("text", x = 4.25, y = 0.15,
label = "p = 0.0717, edf = 1.763", size = 3)
plot_vol_Spi
# bring both surface plots together
plot_volume <- ggarrange(plot_vol_Pve, plot_vol_Spi,
#labels = c("A", "B", "C"),
ncol = 2, nrow = 1,
align = "v")
#  heights= c(1, 0.85, 1.2))
plot_volume
## ---- 4.03. Calcification ----------------------------------------------------
### --- 4.03.1. Pve ------------------------------------------------------------
calcification_Pve <- subset(calcification, spec == "Pve")  %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam5 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = calcification_Pve)
summary(mod_gam5)
plot(mod_gam5)
plot_calc_Pve <- ggplot(volume_Pve, aes(x = x_axis, y = value_log,
color = Color)) +
scale_color_identity() +
geom_point() +
geom_smooth(aes(x = x_axis, y = value_log), method = "gam",
formula = y ~ s(x, bs = "cs", fx = TRUE, k = 5),
color = "black") +
scale_x_continuous(labels= c("control", "0.1", "1", "10", "100"),
breaks = c(1, 2, 3, 4, 5)) +
#  scale_y_continuous(breaks = c(-0.05, 0, 0.05, 0.1, 0.15),
#                    limits=c(-0.05, 0.15))+
labs(title = "P. verrucosa",
x = expression(paste("Treatment ", mg, "·", L^-1)),
y = "log(volume growth)") +
theme_bw() +
theme(plot.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(colour = "black"),
strip.text.x = element_blank(),
strip.text.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.title.y = element_text(size = 10),
legend.position = "none")
plot_calc_Pve
# add GAM statistics
plot_vol_Pve <- plot_vol_Pve + annotate("text", x = 4.25, y = 0.15,
label = "p = 0.0034, edf = 1.903", size = 3)
plot_vol_Pve
### --- 4.03.2. Spi ------------------------------------------------------------
# calcification Spi
calcification_Spi <- subset(calcification, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+10))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = calcification_Spi)
summary(mod_gam1)
plot(mod_gam1)
## ---- 4.04. Necrosis ---------------------------------------------------------
### --- 4.04.1. Pve ------------------------------------------------------------
necrosis_Pve <- subset(necrosis, spec == "Pve") %>%
filter(value != 0) %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = necrosis_Pve)
summary(mod_gam1)
plot(mod_gam1)
### --- 4.04.2. Spi ------------------------------------------------------------
# necrosis Spi
necrosis_Spi <- subset(necrosis, spec == "Spi") %>%
filter(value != 0)  %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = necrosis_Spi)
summary(mod_gam1)
plot(mod_gam1)
## ---- 4.05. Polyp activity ---------------------------------------------------
### --- 4.05.1. Pve ------------------------------------------------------------
polypactivity_Pve <- subset(polypactivity, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = polypactivity_Pve)
summary(mod_gam1)
plot(mod_gam1)
### --- 4.05.2. Spi ------------------------------------------------------------
# polypactivity Spi
polypactivity_Spi <- subset(polypactivity, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = polypactivity_Spi)
summary(mod_gam1)
plot(mod_gam1)
## ---- 4.06. YII --------------------------------------------------------------
### --- 4.06.1. Pve ------------------------------------------------------------
YII_Pve <- subset(YII, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log~ s(conc_log, bs = "cr", k = 5), data = YII_Pve)
summary(mod_gam1)
plot(mod_gam1)
### --- 4.06.2. Spi ------------------------------------------------------------
# YII Spi
YII_Spi <- subset(YII, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = YII_Spi)
summary(mod_gam1)
plot(mod_gam1)
## ---- 4.07. FvFm -------------------------------------------------------------
### --- 4.07.1. Pve ------------------------------------------------------------
FvFm_Pve <- subset(FvFm, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = FvFm_Pve)
summary(mod_gam1)
plot(mod_gam1)
### --- 4.07.2. Spi ------------------------------------------------------------
# FvFm Spi
FvFm_Spi <- subset(FvFm, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = FvFm_Spi)
summary(mod_gam1)
plot(mod_gam1)
## ---- 4.08. rETRmax ----------------------------------------------------------
### --- 4.08.1. Pve ------------------------------------------------------------
rETR_Pve <- subset(rETR, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = rETR_Pve)
summary(mod_gam1)
plot(mod_gam1)
### --- 4.08.2. Spi ------------------------------------------------------------
# rETR Spi
rETR_Spi <- subset(rETR, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = rETR_Spi)
summary(mod_gam1)
plot(mod_gam1)
## ---- 4.09. Ek ---------------------------------------------------------------
### --- 4.09.1. Pve ------------------------------------------------------------
Ek_Pve <- subset(Ek, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = Ek_Pve)
summary(mod_gam1)
plot(mod_gam1)
### --- 4.09.2. Spi ------------------------------------------------------------
# Ek Spi
Ek_Spi <- subset(Ek, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = Ek_Spi)
summary(mod_gam1)
plot(mod_gam1)
## ---- 4.10. Alpha ------------------------------------------------------------
### --- 4.10.1. Pve ------------------------------------------------------------
alpha_Pve <- subset(alpha, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = alpha_Pve)
summary(mod_gam1)
plot(mod_gam1)
### --- 4.10.2. Spi ------------------------------------------------------------
# alpha Spi
alpha_Spi <- subset(alpha, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
# fit GAM
mod_gam1 = gam(value_log ~ s(conc_log, bs = "cr", k = 5), data = alpha_Spi)
summary(mod_gam1)
plot(mod_gam1)
model_Pve <- glmer(value_log ~ conc_log + (1|col),
family = poisson, data = surface_Pve)
# for statistical testing
library(multcomp)
model_Pve <- glmer(value_log ~ conc_log + (1|col),
family = poisson, data = surface_Pve)
# for statistical analyses using LMER and GLMER
library(lme4)
model_Pve <- glmer(value_log ~ conc_log + (1|col),
family = poisson, data = surface_Pve)
View(surface_Pve)
surface <- read.csv2("processed/surface_all.csv")
View(surface)
