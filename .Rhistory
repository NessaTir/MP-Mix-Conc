# format new column as numeric
necro_per = as.numeric(necro_per))
# replace NAs of positive necrotic occurence with the relative necrotic surface area from 'necrosis'
Necrosis$necro_per <- ifelse(is.na(Necrosis$necro_per),
Necrosis$necrosis, Necrosis$necro_per)
# check levels of certain columns to evaluate for releveling
# treatment
# use treatment as categories not numbers (if numbers necessary: use "conc" column)
Necrosis$treat <- factor(Necrosis$treat,
levels = c("control", "0.1", "1", "10", "100"))
levels(Necrosis$treat)
# create a subset with data of Spi
Spi_necrosis <- subset(Necrosis, spec == "Spi")
Spi_necrosis <- subset(Spi_necrosis, tp == "3")
str(Spi_necrosis$treat)
hist((log(Spi_necrosis$necrosis+1)))
# GLMER shows a good fit, therefore GLMER is used
model_Spi <- glmer(log(necrosis+1) ~ conc + (1|col), family="poisson", data = Spi_necrosis)
# summary of tested with the LMER differences
cftest(model_Spi)
# GLMER shows a good fit, therefore GLMER is used
model_Spi <- glmer(log(necrosis+1) ~ treatment + (1|col), family="poisson", data = Spi_necrosis)
# Tukey comparison all treatments
summary(glht(model_Spi, linfct = mcp(treat = "Tukey")))
# Tukey comparison all treatments
summary(glht(model_Spi, linfct = mcp(treatment = "Tukey")))
# Comparison control vs. all MP treatments, missing adjustments
cftest(model_Spi)
# Alternative approach but could not get it to work with column treat
summary_2a <- summary(glht(model_Spi, linfct = mcp(treat = c("control - A = 0",
"control - B = 0",
"control - C = 0",
"control - D = 0"
))), test = adjusted("holm"))
# Alternative approach but could not get it to work with column treat
summary_2a <- summary(glht(model_Spi, linfct = mcp(treatment = c("control - A = 0",
"control - B = 0",
"control - C = 0",
"control - D = 0"
))), test = adjusted("holm"))
# Alternative approach but could not get it to work with column treat
summary_2a <- summary(glht(model_Spi, linfct = mcp(treatment = c("control - A = 0",
"control - B = 0",
"control - C = 0",
"control - D = 0"
))), test = adjusted("holm"))
# Alternative approach but could not get it to work with column treat
summary(glht(model_Spi, linfct = mcp(treatment = c("control - A = 0",
"control - B = 0",
"control - C = 0",
"control - D = 0"
))), test = adjusted("holm"))
# Alternative approach but could not get it to work with column treat so made a new column treatment
summary(glht(model_Spi, linfct = mcp(treatment = c("control - A = 0",
"control - B = 0",
"control - C = 0",
"control - D = 0"
))), test = adjusted("holm"))
# create a subset with data of Pve
Pve_necrosis <- subset(Necrosis, spec == "Pve")
Pve_necrosis <- subset(Pve_necrosis, tp == "3")
str(Pve_necrosis)
hist((log(Pve_necrosis$necrosis+1)))
# LMER shows a good fit, therefore GLMER is used
model_Pve <- glmer(log(necrosis+1) ~ conc + (1|col), family="poisson", data = Pve_necrosis)
# summary of tested with the LMER differences
cftest(model_Pve)
# GLMER shows a good fit, therefore GLMER is used
model_Pve <- glmer(log(necrosis+1) ~ treat + (1|col), family="poisson", data = Pve_necrosis)
# GLMER shows a good fit, therefore GLMER is used
model_Pve <- glmer(log(necrosis+1) ~ treatment + (1|col), family="poisson", data = Pve_necrosis)
# Tukey comparison all treatments
summary(glht(model_Pve, linfct = mcp(treatment = "Tukey")))
# Comparison control vs. all MP treatments, missing adjustments
cftest(model_Pve)
# Alternative approach but could not get it to work with column treat so made a new column treatment
summary(glht(model_Pve, linfct = mcp(treatment = c("control - A = 0",
"control - B = 0",
"control - C = 0",
"control - D = 0"
))), test = adjusted("holm"))
100-66.7
100-94.4
# GLMER shows a good fit, therefore GLMER is used
model_Spi <- glmer(log(necrosis+1) ~ treatment + (1|col), family="poisson", data = Spi_necrosis)
# Tukey comparison all treatments
summary(glht(model_Spi, linfct = mcp(treatment = "Tukey")))
# GLMER shows a good fit, therefore GLMER is used
model_Spi <- glmer(log(necrosis+1) ~ conc + (1|col), family="poisson", data = Spi_necrosis)
# summary of tested with the LMER differences
cftest(model_Spi)
library(tidyverse)
library(readxl)
library(ggplot2)
# bring different plots together
library("patchwork")
# for annotations in heatmap
library("ggtext")
install.packages("ggtext")
# This script builds up on following other scripts
# 'Growth_data_processing'
# 'Necrosis_statistics'
# 'Polyactivity_processing_and_statistics'
# ----- 2. Load in needed packages ---------------------------------------------
library(tidyverse)
library(readxl)
library(ggplot2)
# bring different plots together
library("patchwork")
# for annotations in heatmap
library("ggtext")
# ----- 3. Read in needed data files -------------------------------------------
## ---- 3.1. Processed growth tables -------------------------------------------
# Surface
surface <- read_rds("processed/surface_growth.rds")
# Volume
volume <- read_rds("processed/volume_growth.rds")
# Calcification
calcification <- read_rds("processed/weight_growth.rds")
# Necrosis
necrosis <- read_rds("processed/necrosis_percent.rds")
# Add ranks after Marshall and Schuttenberg 2006:
# low:      1-10%
# moderate: 0-50%
# high:     > 50%
necrosis_rank <- necrosis %>%
mutate(ranks = case_when(necrosis >= 50 ~ "high",
necrosis >= 10 ~ "moderate",
necrosis >= 1 ~ "low",
TRUE ~ "none"),
tp = as.numeric(tp))
# relevel ranks
necrosis_rank$ranks <- factor(necrosis_rank$ranks,
levels = c( "none", "low", "moderate", "high"))
# create a table to create a barplot of necrosis with
Necrosis_Bar <- necrosis_rank %>%
freq_table(spec, treat, conc, tp, ranks, na.rm = T) # Abgabe als letztes --> daraus errechnen sich die 100%
## ---- 3.3. Photosynthetic efficiency -----------------------------------------
# effective quantum yield
YII <- read_rds("processed/light_PAM.rds")
## ---- 3.3. Photosynthetic efficiency -----------------------------------------
# effective quantum yield
YII <- read_rds("processed/light_all.rds")
# relative electron transport rate
rETR <- read_rds("processed/RLC_parameter.rds")
# exclude t0
YII_graph <- subset(YII, tp!= "0")
YII_plot <- ggplot(YII_graph, aes(x = tp, y = YII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = YII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# ----- 4. Create Graphs -------------------------------------------------------
## ---- 4.1. Build up theme ----------------------------------------------------
# Create labels for species
spec_labs <- c("P. verrucosa", "S. pistillata")
names(spec_labs) <- c("Pve", "Spi")
# Create labels for treatments
treat_labs <-  c("0", "0.1", "1", "10", "100")
names(treat_labs) <- c("control", "0.1", "1", "10", "100")
# Create a color scheme
color_scheme <- c("#4A8696", "#FFED85", "#E09F3E", "#9E2A2B", "#540B0E")
alphavalues <- c(0.025, 0.3, 0.6, 1)
YII_plot <- ggplot(YII_graph, aes(x = tp, y = YII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = YII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
YII_plot
View(YII)
# exclude t0
YII_0 <- subset(YII, tp== "0")
View(YII_0)
YII_0_mean <- YII_0 %>%
group_by(ID) %>%
get_summary_stats(YII, type = "mean")
YII_relative <- subset(YII, tp!= "0")
YII_graph <- full_join(YII_relative, YII_0_mean, by="ID")
View(YII_graph)
YII_graph <- YII_graph %>%
mutate(relativeYII = 100/mean*YII) %>%
# exclude t0
YII_graph <- subset(YII, tp!= "0")
YII_graph <- YII_graph %>%
mutate(relativeYII = 100/mean*YII)
View(YII_graph)
YII_plot <- ggplot(YII_graph, aes(x = tp, y = relativeYII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = YII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
YII_plot
YII_plot <- ggplot(YII_graph, aes(x = tp, y = relativeYII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = YII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
YII_plot
View(YII_graph)
YII_plot <- ggplot(YII_graph, aes(x = tp, y = relativeYII))
YII_plot
View(YII_graph)
YII_graph <- YII_graph %>%
mutate(relativeYII = 100/mean*YII)
YII_plot <- ggplot(YII_graph, aes(x = tp, y = relativeYII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = YII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
YII_plot
View(YII_graph)
ggplot(YII_graph, aes(x = tp, y = relativeYII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = YII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
View(YII_graph)
ggplot(YII_graph, aes(x = tp, y = relativeYII))
YII_plot <- ggplot(YII_graph, aes(x = tp, y = relativeYII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = relativeYII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
YII_plot
YII_plot <- ggplot(YII_graph, aes(x = tp, y = relativeYII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = relativeYII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
geom_hline(yintercept=100, linetype="dashed")+
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("relative YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
YII_plot
YII_plot <- ggplot(YII_graph, aes(x = tp, y = relativeYII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = relativeYII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
geom_hline(yintercept=mean(YII_graph$relativeYII), linetype="dashed")+
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("relative YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
YII_plot
YII_plot <- ggplot(YII_graph, aes(x = tp, y = relativeYII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = relativeYII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
geom_hline(yintercept=100, linetype="dashed")+
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("relative YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
YII_plot
YII_plot <- ggplot(YII_graph, aes(x = tp, y = relativeYII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = relativeYII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
#geom_hline(yintercept=100, linetype="dashed")+
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("relative YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
YII_plot
# standardize each fragment to it's mean value at t0
rETRmax_0 <- subset(rETRmax, tp== "0")
# standardize each fragment to it's mean value at t0
rETRmax_0 <- subset(rETR, tp== "0")
# relative electron transport rate
rETR <- read_rds("processed/rETR_parameter.rds")
# standardize each fragment to it's mean value at t0
rETRmax_0 <- subset(rETR, tp== "0")
View(rETR)
# ----- 1. Explanation of this script ------------------------------------------
# This script focuses on the data processing and statistical analyzes of the additional parameters of
# photosynthetic efficiency of the corals photosymbionts, derived from rapid light curves (RLCs).
# The parameters were measured using pulse amplitude modulated fluorometry (PAM) and include
#   a) relative electron transport rate (rETRmax)
#   b) efficiency of light capture (α)
#   c)  and minimum saturating irradiance (Ek)
# Statistical analyzes will be conducted in 'PAM_RLC_statistics
# ----- 2. Load in needed packages ---------------------------------------------
# to easily clean data, to read in .rds files
library(tidyverse)
# for statistical analyses using LMER and GLMER
library(lme4)
# for statistical testing
library(multcomp)
# check model fits statistically
library(performance)
library(rstatix)
# check model fits visually using qqplot, use glht for lmer testing
library(car)
# for RLC parameter calculation
install.packages("phytotools")
library(phytotools)
# for RLC parameter calculation
install.packages("phytotools")
library(phytotools)
YII_plot <- ggplot(YII_graph, aes(x = tp, y = relativeYII)) +
facet_grid( ~ spec,
labeller = labeller(spec = spec_labs)) +
geom_smooth(aes(x = tp, y = relativeYII, group = treat, color = treat, fill = treat)) +
# brings lines under the boxplots to see changes over time
#geom_hline(yintercept=100, linetype="dashed")+
scale_x_continuous(labels= c("4", "8", "12"), breaks = c(1, 2, 3)) +
scale_color_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
scale_fill_manual(values = color_scheme, labels=c('0', '0.1', '1', '10', '100')) +
ylab("relative YII") +
xlab("Weeks of exposure") +
labs(color = "Treatment (mg/l)", fill = "Treatment (mg/l)") +
# create design
theme_classic() +
theme(panel.background = element_rect(color = "black"),
strip.background = element_blank(),
strip.text.x = element_text(face = "italic", size = 12),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = "top")
# show plot
YII_plot
# save plot
ggsave("out/PAM_plot_relative.png", plot = YII_plot,
scale = 1, width = 18, height = 11, units = c("cm"),
dpi = 600, limitsize = TRUE)
