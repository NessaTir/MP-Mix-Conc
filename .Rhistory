View(model1)
models <- list( model1, model2)
model.names <- c('model1', 'model2')
aictab(cand.set = models, modnames = model.names)
model2 <- lm(log(surface_Pve_wocon100$value) ~ log(surface_Pve_wocon100$conc))
models <- list( model1, model2)
model.names <- c('model1', 'model2')
aictab(cand.set = models, modnames = model.names)
model2 <- lm(log(surface_Pve_wocon100$value) ~ log(surface_Pve_wocon$conc))
#view the output of the model
summary(model2)
models <- list( model1, model2)
model.names <- c('model1', 'model2')
aictab(cand.set = models, modnames = model.names)
#-------test -------------
#fit the model
model1 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon)
#view the output of the model
summary(model1)
model2 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon100)
#view the output of the model
summary(model2)
models <- list( model1, model2)
model.names <- c('model1', 'model2')
aictab(cand.set = models, modnames = model.names)
#fit the model
model <- lm(value ~ log(conc), data = surface_Pve_wocon)
model.names <- c('model', 'model1', 'model2')
aictab(cand.set = models, modnames = model.names)
model3 <- lm(log(value) ~ log(conc), data = surface_Pve)
#view the output of the model
summary(model3)
model3 <- lm(value ~ conc, data = surface_Pve)
#view the output of the model
summary(model3)
models <- list( model1, model2)
model.names <- c('model1', 'model2')
aictab(cand.set = models, modnames = model.names)
models <- list( model, model3)
model.names <- c('model', 'model3')
aictab(cand.set = models, modnames = model.names)
?aictab
#fit the model
model <- lm(value ~ log(conc), data = surface_Pve_wocon)
#fit the model
model <- lm(scale(value) ~ log(conc), data = surface_Pve_wocon)
#view the output of the model
summary(model)
surface_Pve_wocon
#-------test -------------
#fit the model
model1 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon)
#view the output of the model
summary(model1)
#-------test -------------
#fit the model
model1 <- lm(value_log ~ conc_log, data = surface_Pve_wocon)
#view the output of the model
summary(model1)
#-------test -------------
#fit the model
model1 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon)
#view the output of the model
summary(model1)
model2 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon100)
#view the output of the model
summary(model2)
model3 <- lm(value ~ conc, data = surface_Pve)
#view the output of the model
summary(model3)
models <- list( model1, model2)
model.names <- c('model1', 'model2')
aictab(cand.set = models, modnames = model.names)
models <- list( model3, model2)
model.names <- c('model3', 'model2')
aictab(cand.set = models, modnames = model.names)
model3 <- glm(value ~ conc, data = surface_Pve)
model2 <- glm(log(value) ~ log(conc), data = surface_Pve_wocon100)
model2 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon100)
model3 <- lm(value ~ conc, data = surface_Pve)
#view the output of the model
summary(model3)
models <- list( model3, model2)
model.names <- c('model3', 'model2')
aictab(cand.set = models, modnames = model.names)
model3 <- lm(log(value) ~ conc, data = surface_Pve)
#view the output of the model
summary(model3)
model3 <- lm(log(conc) ~ value, data = surface_Pve)
#view the output of the model
summary(model3)
model3 <- lm(value ~ conc, data = surface_Pve)
model3 <- lm(log(conc) ~ value, data = surface_Pve)
#view the output of the model
summary(model3)
#fit the model
model <- lm(value ~ log(conc), data = surface_Pve_wocon)
#view the output of the model
summary(model)
model3 <- lm(log(conc) ~ value, data = surface_Pve_wocon)
#view the output of the model
summary(model3)
model3 <- lm(log(conc) ~ value, data = surface_Pve)
#view the output of the model
summary(model3)
#fit the model
model <- lmer(value ~ log(conc)+ (1|col), data = surface_Pve_wocon)
surface_Pve_wocon
#fit the model
model <- lm(value ~ log(conc), data = surface_Pve)
#view the output of the model
summary(model)
#fit the model
model <- lm(log(conc) ~ value, data = surface_Pve)
# ----- 2. Load in needed packages ---------------------------------------------
library(tidyverse)
# read in the data files
library(readxl)
# work with summarized data, e.g., means
library(rstatix)
# test for linear correlation
library(ggpubr)
# for GAM
library(mgcv)
# ----- 3. Read in needed data files -------------------------------------------
## ---- 3.01. Surface ----------------------------------------------------------
surface <- read.csv2("processed/surface_all.csv")
## ---- 3.02. Volume -----------------------------------------------------------
volume <- read.csv2("processed/volume_all.csv")
## ---- 3.03. Calcification ----------------------------------------------------
calcification <- read.csv2("processed/calcification_all.csv")
## ---- 3.04. Necrosis ---------------------------------------------------------
necrosis <- read.csv2("processed/necrosis_all.csv")
## ---- 3.05. Polypactivity ----------------------------------------------------
polypactivity <- read.csv2("processed/polypactivity_all.csv")
## ---- 3.06. YII --------------------------------------------------------------
YII <- read.csv2("processed/YII_all.csv")
## ---- 3.07. FvFm -------------------------------------------------------------
FvFm <- read.csv2("processed/FvFm_all.csv")
## ---- 3.08. rETRmax ----------------------------------------------------------
rETR <- read.csv2("processed/rETR_all.csv")
## ---- 3.09. Ek ---------------------------------------------------------------
Ek <- read.csv2("processed/Ek_all.csv")
## ---- 3.10. Alpha ------------------------------------------------------------
alpha <- read.csv2("processed/alpha_all.csv")
# ----- 4. Looking for Relationships -------------------------------------------
install.packages("AICcmodavg")
install.packages("AICcmodavg")
# ----- 4. Looking for Relationships -------------------------------------------
## ---- 4.01. Surface ----------------------------------------------------------
### --- 4.01.1. Pve ------------------------------------------------------------
# Surface Pve
surface_Pve <- subset(surface, spec == "Pve") %>%
mutate(value_log = log(value),
conc_log = log(conc))
# ----- 2. Load in needed packages ---------------------------------------------
library(tidyverse)
# read in the data files
library(readxl)
# work with summarized data, e.g., means
library(rstatix)
# test for linear correlation
library(ggpubr)
# for GAM
library(mgcv)
# using AIC to find the best fitted test
library(AICcmodavg)
# ----- 3. Read in needed data files -------------------------------------------
## ---- 3.01. Surface ----------------------------------------------------------
surface <- read.csv2("processed/surface_all.csv")
## ---- 3.02. Volume -----------------------------------------------------------
volume <- read.csv2("processed/volume_all.csv")
## ---- 3.03. Calcification ----------------------------------------------------
calcification <- read.csv2("processed/calcification_all.csv")
## ---- 3.04. Necrosis ---------------------------------------------------------
necrosis <- read.csv2("processed/necrosis_all.csv")
## ---- 3.05. Polypactivity ----------------------------------------------------
polypactivity <- read.csv2("processed/polypactivity_all.csv")
## ---- 3.06. YII --------------------------------------------------------------
YII <- read.csv2("processed/YII_all.csv")
## ---- 3.07. FvFm -------------------------------------------------------------
FvFm <- read.csv2("processed/FvFm_all.csv")
## ---- 3.08. rETRmax ----------------------------------------------------------
rETR <- read.csv2("processed/rETR_all.csv")
## ---- 3.09. Ek ---------------------------------------------------------------
Ek <- read.csv2("processed/Ek_all.csv")
## ---- 3.10. Alpha ------------------------------------------------------------
alpha <- read.csv2("processed/alpha_all.csv")
# ----- 4. Looking for Relationships -------------------------------------------
## ---- 4.01. Surface ----------------------------------------------------------
### --- 4.01.1. Pve ------------------------------------------------------------
# Surface Pve
surface_Pve <- subset(surface, spec == "Pve") %>%
mutate(value_log = log(value),
conc_log = log(conc))
# untransformed
Surf_Pve1 <- cor.test(surface_Pve$value, surface_Pve$conc, conf.level = 0.95, method = "pearson")
lm(log(value) ~ log(conc), data = surface_Pve_wocon100)
# log-log transformed - early linearity
surface_Pve_wocon100 <- surface_Pve_wocon %>%
subset(conc != "100")
lm(log(value) ~ log(conc), data = surface_Pve_wocon100)
Surf_Pve2 <- lm(log(value) ~ log(conc), data = surface_Pve)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0")
Surf_Pve2 <- lm(log(value) ~ log(conc), data = surface_Pve)
lm(log(value) ~ log(conc), data = surface_Pve)
Surf_Pve2 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon)
# untransformed
Surf_Pve1 <- lm((value) ~ (conc), data = surface_Pve)
Surf_Pve1
#view the output of the model
summary(Surf_Pve1)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0")
Surf_Pve2 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve2)
Surf_Pve3 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon100)
# log-log transformed - early linearity
surface_Pve_wocon100 <- surface_Pve_wocon %>%
subset(conc != "100")
Surf_Pve3 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon100)
#view the output of the model
summary(Surf_Pve3)
Surf_Pve3 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon01)
# log-log transformed - late linearity
surface_Pve_wocon01 <- surface_Pve_wocon %>%
subset(conc != "0.1")
Surf_Pve3 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon01)
#view the output of the model
summary(Surf_Pve4)
Surf_Pve4 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon01)
#view the output of the model
summary(Surf_Pve4)
# log-log transformed - early linearity
surface_Pve_wocon100 <- surface_Pve_wocon %>%
subset(conc != "100")
Surf_Pve3 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon100)
#view the output of the model
summary(Surf_Pve3)
# log-log transformed - late linearity
surface_Pve_wocon01 <- surface_Pve_wocon %>%
subset(conc != "0.1")
Surf_Pve4 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon01)
#view the output of the model
summary(Surf_Pve4)
#fit the model
Surf_Pve5 <- lm(value ~ log(conc), data = surface_Pve)
#fit the model
Surf_Pve5 <- lm(value ~ log(conc), data = surface_Pvewocon)
#view the output of the model
summary(Surf_Pve5)
#fit the model
Surf_Pve5 <- lm(value ~ log(conc), data = surface_Pvewocon)
#fit the model
Surf_Pve5 <- lm(value ~ log(conc), data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve5)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve3,Surf_Pve4)
model.names <- c('Surf_Pve2', 'Surf_Pve3', 'Surf_Pve4')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
View(Surf_Pve1)
View(Surf_Pve2)
?na.action
Surf_Pve2 <- lm(log(value) ~ log(conc), na.omit(),
data = surface_Pve_wocon)
Surf_Pve2 <- lm(log(value) ~ log(conc), na.omit(value),
data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve2)
?lm
# AIC test
models_Surf_Pve <- list(Surf_Pve1, Surf_Pve2, Surf_Pve3,Surf_Pve4)
model.names <- c('Surf_Pve1', 'Surf_Pve2', 'Surf_Pve3', 'Surf_Pve4')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
Surf_Pve2["na.action"]
Surf_Pve2[-"na.action"]
Surf_Pve2[!"na.action"]
!Surf_Pve2["na.action"]
Surf_Pve2[- c("na.action")]
Surf_Pve2[-c("na.action")]
Surf_Pve2[-c(9)]
!Surf_Pve2$na.action
Surf_Pve2 <- Surf_Pve2[-c(9)]
View(Surf_Pve2)
# AIC test
models_Surf_Pve <- list(Surf_Pve1, Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve1', 'Surf_Pve2', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
class(Surf_Pve2)
aictab(cand.set = models_Surf_Pve, modnames = model.names)
# AIC test
models_Surf_Pve <- list(Surf_Pve3, Surf_Pve4)
model.names <- c('Surf_Pve3', 'Surf_Pve4')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
# AIC test
models_Surf_Pve <- list(Surf_Pve1, Surf_Pve5)
model.names <- c('Surf_Pve1', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
# AIC test
models_Surf_Pve <- list(Surf_Pve1, Surf_Pve5)
model.names <- c('Surf_Pve1', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
View(Surf_Pve5)
View(Surf_Pve3)
View(Surf_Pve4)
View(Surf_Pve5)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
Surf_Pve2 <- lm(value_log ~ con_log, na.omit(value),
data = surface_Pve_wocon)
Surf_Pve2 <- lm(value_log ~ conc_log, na.omit(value),
data = surface_Pve_wocon)
Surf_Pve2 <- lm(value_log ~ conc_log,
data = surface_Pve_wocon)
#fit the model
Surf_Pve5 <- lm(value ~ conc_log, data = surface_Pve_wocon)
Surf_Pve2 <- Surf_Pve2[-c(9)]
!Surf_Pve2$na.action
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
class(Surf_Pve2$model)
# untransformed
Surf_Pve1 <- lm((value) ~ (conc),
na.omit(), data = surface_Pve)
# untransformed
Surf_Pve1 <- lm((value) ~ (conc),
na.omit(value), data = surface_Pve)
# untransformed
Surf_Pve1 <- lm((value) ~ (conc),
na.omit(conc), data = surface_Pve)
#view the output of the model
summary(Surf_Pve1)
# untransformed
Surf_Pve1 <- lm((value) ~ (conc), data = surface_Pve)
View(Surf_Pve1)
# untransformed
Surf_Pve1 <- lm((value) ~ (conc),
na.omit(conc), data = surface_Pve)
class(Surf_Pve1)
class(Surf_Pve2)
Surf_Pve2 <- lm(log(value) ~ log(conc), na.omit(value),
data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve2)
class(Surf_Pve2)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0")
Surf_Pve2 <- lm(log(value) ~ log(conc), na.omit(value),
data = surface_Pve_wocon)
Surf_Pve2 <- lm(log(value) ~ log(conc),
data = surface_Pve_wocon)
class(Surf_Pve2)
Surf_Pve2 <- lm(log(value) ~ log(conc), na.omit = TRUE,
data = surface_Pve_wocon)
Surf_Pve2 <- lm(log(value) ~ log(conc), na.action = TRUE,
data = surface_Pve_wocon)
# untransformed
Surf_Pve1 <- lm((value) ~ (conc), na.action = TRUE, data = surface_Pve)
#view the output of the model
summary(Surf_Pve1)
# untransformed
Surf_Pve1 <- lm((value) ~ (conc), na.action = F, data = surface_Pve)
#view the output of the model
summary(Surf_Pve1)
# untransformed
Surf_Pve1 <- lm((value) ~ (conc), data = surface_Pve)
#view the output of the model
summary(Surf_Pve1)
Surf_Pve2 <- lm(log(value) ~ log(conc), na.action = F,
data = surface_Pve_wocon)
View(surface_Pve_wocon)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0") %>%
na.omit(value)
View(surface_Pve_wocon)
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0")
View(surface_Pve)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0") %>%
na.omit(value_log)
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0")
View(surface_Pve_wocon)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0") %>%
filter(value_log != "NaN")
View(surface_Pve_wocon)
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0")
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0") %>%
filter(value_log != "NaN")
Surf_Pve2 <- lm(log(value) ~ log(conc),
data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve2)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
class(Surf_Pve2$na.action)
aictab(cand.set = models_Surf_Pve, modnames = model.names)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0") %>%
filter(value_log != "NaN")
Surf_Pve2 <- lm(log(value) ~ log(conc),
data = surface_Pve_wocon)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
View(Surf_Pve2)
Surf_Pve4 <- lm(value_log ~ conc_log, data = surface_Pve_wocon01)
Surf_Pve2 <- lm(value_log ~ conc_log,
data = surface_Pve_wocon)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
Surf_Pve2 <- lm(value ~ conc_log,
data = surface_Pve_wocon)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
Surf_Pve2 <- lm(value_log ~ conc,
data = surface_Pve_wocon)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
# log-log transformed - early linearity
surface_Pve_wocon100 <- surface_Pve_wocon %>%
subset(conc != "100") %>%
filter(value_log != "NaN")
Surf_Pve3 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon100)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5, Surf_Pve3)
model.names <- c('Surf_Pve2', 'Surf_Pve5', 'Surf_Pve3')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
Surf_Pve3 <- lm(value_log ~ conc_log, data = surface_Pve_wocon100)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5, Surf_Pve3)
model.names <- c('Surf_Pve2', 'Surf_Pve5', 'Surf_Pve3')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0") %>%
filter(value_log != "NaN")
Surf_Pve2 <- lm(value ~ conc_log,
data = surface_Pve_wocon)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5, Surf_Pve3)
model.names <- c('Surf_Pve2', 'Surf_Pve5', 'Surf_Pve3')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
Surf_Pve2 <- glm(value_log ~ conc_log,
data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve2)
Surf_Pve3 <- lm(value_log ~ conc_log, data = surface_Pve_wocon100)
#view the output of the model
summary(Surf_Pve3)
Surf_Pve3 <- glm(value_log ~ conc_log, data = surface_Pve_wocon100)
#view the output of the model
summary(Surf_Pve3)
Surf_Pve4 <- glm(log(value) ~ log(conc), data = surface_Pve_wocon01)
#view the output of the model
summary(Surf_Pve4)
#fit the model
Surf_Pve5 <- glm(value ~ log(conc), data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve5)
#fit the model
Surf_Pve5 <- glm(value ~ log(conc), data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve5)
Surf_Pve4 <- glm(log(value) ~ log(conc), data = surface_Pve_wocon01)
#view the output of the model
summary(Surf_Pve4)
# log-log transformed - early linearity
surface_Pve_wocon100 <- surface_Pve_wocon %>%
subset(conc != "100") %>%
filter(value_log != "NaN")
Surf_Pve3 <- glm(value_log ~ conc_log, data = surface_Pve_wocon100)
#view the output of the model
summary(Surf_Pve3)
Surf_Pve2 <- glm(value_log ~ conc_log,
data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve2)
