na.omit(value)
View(surface_Pve_wocon)
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0")
View(surface_Pve)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0") %>%
na.omit(value_log)
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0")
View(surface_Pve_wocon)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0") %>%
filter(value_log != "NaN")
View(surface_Pve_wocon)
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0")
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0") %>%
filter(value_log != "NaN")
Surf_Pve2 <- lm(log(value) ~ log(conc),
data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve2)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
class(Surf_Pve2$na.action)
aictab(cand.set = models_Surf_Pve, modnames = model.names)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0") %>%
filter(value_log != "NaN")
Surf_Pve2 <- lm(log(value) ~ log(conc),
data = surface_Pve_wocon)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
View(Surf_Pve2)
Surf_Pve4 <- lm(value_log ~ conc_log, data = surface_Pve_wocon01)
Surf_Pve2 <- lm(value_log ~ conc_log,
data = surface_Pve_wocon)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
Surf_Pve2 <- lm(value ~ conc_log,
data = surface_Pve_wocon)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
Surf_Pve2 <- lm(value_log ~ conc,
data = surface_Pve_wocon)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5)
model.names <- c('Surf_Pve2', 'Surf_Pve5')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
# log-log transformed - early linearity
surface_Pve_wocon100 <- surface_Pve_wocon %>%
subset(conc != "100") %>%
filter(value_log != "NaN")
Surf_Pve3 <- lm(log(value) ~ log(conc), data = surface_Pve_wocon100)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5, Surf_Pve3)
model.names <- c('Surf_Pve2', 'Surf_Pve5', 'Surf_Pve3')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
Surf_Pve3 <- lm(value_log ~ conc_log, data = surface_Pve_wocon100)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5, Surf_Pve3)
model.names <- c('Surf_Pve2', 'Surf_Pve5', 'Surf_Pve3')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
# log-log transformed
# exclude conc 0 mg/l, as log(0) not possible
surface_Pve_wocon <- surface_Pve %>%
subset(conc != "0") %>%
filter(value_log != "NaN")
Surf_Pve2 <- lm(value ~ conc_log,
data = surface_Pve_wocon)
# AIC test
models_Surf_Pve <- list(Surf_Pve2, Surf_Pve5, Surf_Pve3)
model.names <- c('Surf_Pve2', 'Surf_Pve5', 'Surf_Pve3')
aictab(cand.set = models_Surf_Pve, modnames = model.names)
Surf_Pve2 <- glm(value_log ~ conc_log,
data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve2)
Surf_Pve3 <- lm(value_log ~ conc_log, data = surface_Pve_wocon100)
#view the output of the model
summary(Surf_Pve3)
Surf_Pve3 <- glm(value_log ~ conc_log, data = surface_Pve_wocon100)
#view the output of the model
summary(Surf_Pve3)
Surf_Pve4 <- glm(log(value) ~ log(conc), data = surface_Pve_wocon01)
#view the output of the model
summary(Surf_Pve4)
#fit the model
Surf_Pve5 <- glm(value ~ log(conc), data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve5)
#fit the model
Surf_Pve5 <- glm(value ~ log(conc), data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve5)
Surf_Pve4 <- glm(log(value) ~ log(conc), data = surface_Pve_wocon01)
#view the output of the model
summary(Surf_Pve4)
# log-log transformed - early linearity
surface_Pve_wocon100 <- surface_Pve_wocon %>%
subset(conc != "100") %>%
filter(value_log != "NaN")
Surf_Pve3 <- glm(value_log ~ conc_log, data = surface_Pve_wocon100)
#view the output of the model
summary(Surf_Pve3)
Surf_Pve2 <- glm(value_log ~ conc_log,
data = surface_Pve_wocon)
#view the output of the model
summary(Surf_Pve2)
library(mgcv)
# ----- 2. Load in needed packages ---------------------------------------------
library(tidyverse)
# read in the data files
library(readxl)
# work with summarized data, e.g., means
library(rstatix)
# test for linear correlation
library(ggpubr)
# using AIC to find the best fitted test
library(AICcmodavg)
install.packages("AICcmodavg")
# ----- 4. Looking for Relationships -------------------------------------------
## ---- 4.01. Surface ----------------------------------------------------------
### --- 4.01.1. Pve ------------------------------------------------------------
# Surface Pve
surface_Pve <- subset(surface, spec == "Pve") %>%
mutate(value_log = log(value),
conc_log = log(conc))
library(mgcv)
View(surface)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = surface)
summary(mod_gam1)
plot(mod_gam1)
surface_Pve <- subset(surface, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
surface_Pve <- subset(surface, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+1))
surface_Pve <- subset(surface, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+100))
mod_lm = gam(conc ~ value, data = surface_Pve)
summary(mod_lm)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = surface)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = surface_Pve)
summary(mod_gam1)
plot(mod_gam1)
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq")
# ----- 4. Looking for Relationships -------------------------------------------
## ---- 4.01. Surface ----------------------------------------------------------
### --- 4.01.1. Pve ------------------------------------------------------------
# Surface Pve
surface_Pve <- subset(surface, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+100))
mod_lm = gam(conc ~ value, data = surface_Pve)
summary(mod_lm)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = surface_Pve)
summary(mod_gam1)
plot(mod_gam1)
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq") #no difference between models -> linear fit is good
### --- 4.01.2. Spi ------------------------------------------------------------
# Surface Spi
surface_Spi <- subset(surface, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
### --- 4.01.2. Spi ------------------------------------------------------------
# Surface Spi
surface_Spi <- subset(surface, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+100))
mod_lm = gam(conc ~ value, data = surface_Spi)
summary(mod_lm)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = surface_Spi)
summary(mod_gam1)
plot(mod_gam1)
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq") #no difference between models -> linear fit is good
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_lm)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = surface_Spi)
summary(mod_gam1)
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq") #big difference between models -> but what is better???
plot(ggeffects::ggpredict(mod_gam1), facets = TRUE)
gratia::draw(mod_gam1)
plot(ggeffects::ggpredict(mod_gam1), facets = TRUE)
plot(mod_gam1), facets = TRUE)
plot(mod_gam1, facets = TRUE)
plot(mod_gam1)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = surface_Spi)
summary(mod_gam1)
plot(mod_gam1)
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x, k=9))
surface_Spi %>%
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
mod_lm = gam(conc_log ~ value_log, data = surface_Spi)
summary(mod_lm)
mod_gam1 = gam(conc_log ~ s(value_log, bs = "cr"), data = surface_Spi)
summary(mod_gam1)
plot(mod_gam1)
surface_Spi %>%
ggplot(aes(x=conc_log, y=value_log))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
plot(mod_gam1)
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
#doesn't work, don't know why
surface_Spi %>%
ggplot(aes(x=conc_log, y=value_log))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
#doesn't work, don't know why
surface_Spi %>%
ggplot(aes(x=conc_log, y=value_log))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x, k=9))
plot(mod_gam1)
draw(mod_gam1)
mod_lm = gam(conc ~ value, data = surface_Spi)
summary(mod_lm)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = surface_Spi)
summary(mod_gam1)
plot(mod_gam1)
#doesn't work, don't know why
surface_Spi %>%
ggplot(aes(x=conc_log, y=value_log))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
#doesn't work, don't know why
surface_Spi %>%
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq") #big difference between models -> gam is better
## ---- 4.02. Volume -----------------------------------------------------------
### --- 4.02.1. Pve ------------------------------------------------------------
volume_Pve <- subset(volume, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
## ---- 4.02. Volume -----------------------------------------------------------
### --- 4.02.1. Pve ------------------------------------------------------------
volume_Pve <- subset(volume, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+100))
mod_lm = gam(conc ~ value, data = surface_Spi)
mod_lm = gam(conc ~ value, data = volume_Pve)
summary(mod_lm)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = volume_Pve)
summary(mod_gam1)
plot(mod_gam1)
#doesn't work, don't know why
surface_Spi %>%
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq") #big difference between models
### --- 4.02.2. Spi ------------------------------------------------------------
# volume Spi
volume_Spi <- subset(volume, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
### --- 4.02.2. Spi ------------------------------------------------------------
# volume Spi
volume_Spi <- subset(volume, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+100))
mod_lm = gam(conc ~ value, data = volume_Pve)
summary(mod_lm)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = volume_Pve)
summary(mod_gam1)
plot(mod_gam1)
#doesn't work, don't know why
surface_Spi %>%
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
#doesn't work, don't know why
volume_Pve %>%
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq") #no difference between models, linear is fine
## ---- 4.03. Calcification ----------------------------------------------------
### --- 4.03.1. Pve ------------------------------------------------------------
calcification_Pve <- subset(calcification, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
mod_lm = gam(conc ~ value, data = calcification_Pve)
summary(mod_lm)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = calcification_Pve)
summary(mod_gam1)
plot(mod_gam1)
#doesn't work, don't know why
volume_Pve %>%
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
#doesn't work, don't know why
calcification_Pve %>%
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq") #no difference between models, linear is fine
### --- 4.03.2. Spi ------------------------------------------------------------
# calcification Spi
calcification_Spi <- subset(calcification, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value))
calcification_Spi
hist(calcification_Spi$value)
min(calcification_Spi$value)
### --- 4.03.2. Spi ------------------------------------------------------------
# calcification Spi
calcification_Spi <- subset(calcification, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+10))
mod_lm = gam(conc ~ value, data = calcification_Pve)
mod_lm = gam(conc ~ value, data = calcification_Spi)
summary(mod_lm)
mod_gam1 = gam(conc ~ s(value, bs = "cr"), data = calcification_Spi)
summary(mod_gam1)
plot(mod_gam1)
#doesn't work, don't know why
calcification_Pve %>%
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq") #no difference between models, linear is fine
plot(mod_gam1)
mod_lm = gam(value ~ conc, data = surface_Pve)
summary(mod_lm)
# ----- 4. Looking for Relationships -------------------------------------------
## ---- 4.01. Surface ----------------------------------------------------------
### --- 4.01.1. Pve ------------------------------------------------------------
# Surface Pve
surface_Pve <- subset(surface, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+100))
mod_lm = gam(value ~ conc, data = surface_Pve)
summary(mod_lm)
mod_gam1 = gam(value~ s(conc, bs = "cr"), data = surface_Pve)
summary(mod_gam1)
mod_gam1 = gam(value~ s(conc, bs = "cr"), data = surface_Pve)
mod_gam1 = gam(value~ s(conc, bs = "cr", k=4), data = surface_Pve)
summary(mod_gam1)
plot(mod_gam1)
mod_gam1 = gam(value~ s(conc, bs = "cr", k=8), data = surface_Pve)
mod_gam1 = gam(value~ s(conc, bs = "cr", k=5), data = surface_Pve)
summary(mod_gam1)
plot(mod_gam1)
mod_gam1 = gam(value~ s(conc, bs = "cr", k=6), data = surface_Pve)
mod_gam1 = gam(value~ s(conc, bs = "cr", k=5), data = surface_Pve)
summary(mod_gam1)
plot(mod_gam1)
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq") #no difference between models -> linear fit is good
### --- 4.01.2. Spi ------------------------------------------------------------
# Surface Spi
surface_Spi <- subset(surface, spec == "Spi") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+100))
mod_lm = gam(value ~ conc, data = surface_Spi)
summary(mod_lm)
mod_gam1 = gam(value~ s(conc, bs = "cr"), data = surface_Spi)
mod_gam1 = gam(value~ s(conc, bs = "cr", k=6), data = surface_Spi)
mod_gam1 = gam(value~ s(conc, bs = "cr", k=5), data = surface_Spi)
summary(mod_gam1)
plot(mod_gam1)
#doesn't work, don't know why
surface_Spi %>%
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq") #big difference between models
plot(mod_gam1)
## ---- 4.02. Volume -----------------------------------------------------------
### --- 4.02.1. Pve ------------------------------------------------------------
volume_Pve <- subset(volume, spec == "Pve") %>%
mutate(conc_log = log(conc+1),
value_log = log(value+100))
mod_lm = gam(value ~ conc, data = volume_Pve)
summary(mod_lm)
mod_gam1 = gam(value~ s(conc, bs = "cr"), data = volume_Pve)
summary(mod_gam1)
plot(mod_gam1)
#doesn't work, don't know why
surface_Spi %>%
ggplot(aes(x=conc, y=value))+
geom_line()+
geom_point()+
geom_smooth(method="gam", formula = y ~ s(x))
AIC(mod_lm)
summary(mod_lm)$sp.criterion
summary(mod_lm)$r.sq
AIC(mod_gam1)
summary(mod_gam1)$sp.criterion
summary(mod_gam1)$r.sq
anova(mod_lm, mod_gam1, test = "Chisq") #no difference between models, linear is fine
anova(mod_lm, mod_gam1, test = "Chisq") #no difference between models, linear is fine
